package com.liao.chapter05.recursion

import java.time.DayOfWeek

/**
  * 递归练习三道题目：1、斐波那契 2、递归求函数值 3、猴子吃桃问题
  */
object Exercises01 {

  def main(args: Array[String]): Unit = {

    //1、斐波那契  都假设n为正整数
    println(f1(6))
    //题2：求函数值，已知 f(1)=3; f(n) = 2*f(n-1)+1; 请使用递归的思想编程，求出 f(n)的值? 都假设n为正整数
    println(f2(2))
    //题3：猴子吃桃
    println(f3(9))
  }

  //题1：斐波那契数 请使用递归的方式，求出斐波那契数1,1,2,3,5,8,13...  都假设n为正整数
  // 给你一个整数n，求出它的斐波那契数是多少？
  def f1(n: Int): Int = {

    //分析如下：
    //1、当n等于1时候，结果为1
    //2、当n等于2的时候，结果为2
    //3、当n>2的时候，结果等于前面两个数之和
    if (n == 1 || n == 2) {
      1
    } else {
      f1(n - 2) + f1(n - 1)
    }
  }

  //题2：求函数值，已知 f(1)=3; f(n) = 2*f(n-1)+1; 请使用递归的思想编程，求出 f(n)的值? 都假设n为正整数
  def f2(n: Int): Int = {

    //分析如下：
    //1、当n等于1时候，结果为3
    //2、当n>2的时候，结果等于前面数两倍再加1
    if (n == 1) {
      3
    } else {
      2 * f2(n - 1) + 1
    }
  }

  //题3：猴子吃桃子问题有一堆桃子，猴子第一天吃了其中的一半，并再多吃了一个！
  // 以后每天猴子都吃其中的一半，然后再多吃一个。当到第十天时，想再吃时（还没吃），
  // 发现只有1个桃子了。问题：最初共多少个桃子？
  //这里假设day在1到10天之间，函数里面就不写判断了
  def f3(day: Int): Int = {
    //分析如下：
    //1、第10天就剩一个桃子，也就是day=10的时候，结果是1
    //2、倒着推算，第九天就是：f3(10)=f3(9)/2-1,得出来f3(9)=(f3(10)+1)*2
    //3、以此类推，得出公式为： f3(day-1)=(f3(day)+1)*2
    if (day == 10) {
      1
    } else {
      (f3(day+1) + 1) * 2
    }
  }
}
